This is code that I wrote in early 2024. I stopped working on it sometime in March to work on other topics and returned to work on it sometime in December 2024. It is based on an early model of the SEDatabase and doesn't have a lot of the features in "CPU Trace Recompilation". 

JPSegment
This is the main code for recompiling MIPs code. It performs SEDiagram construction and reduction, including Const Reconciliation. It also removes operations on transient memory. It doesn't handle datum reduction or alignment of SW/LW/New/Free nodes on vertical lines because when I made the code, I didn't have the constructs. Note that there's an error in JPLWInst.cpp because it doesn't handle stack pointers. I'll try to fix it. Also note that there is no such thing as a Const node in the implementation. Const nodes are just a theoretical construct. Because they're always stubbed, there's no need to explicitely create them.

SPIM MIPs Simulator
This is the SPIM simulator that takes in MIPs code and outputs a trace. To get it to output the trace, you'll need a command line argument but I'm not sure of the exact character. Its memory model has been modified to enable the free operation. Thus the heap is a colllection of memory regions that can merge together.

C to MIPs Compiler
This is a C to MIPS compiler that I used. The code needs to be rewritten such that the variables are assigned to registers instead of the stack.

Memory Model for Spim
This is the memory model that was put into SPIM. It handles memory as a collection of allocated regions. If two regions are adjacent then they are merged together.

Test MIPs files
This is the test files that can be used on JPSegment. Note that the code worked on all of the test files.
